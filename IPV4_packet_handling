IP layer in stack

Fragmentation/Defragmentation is a big problem. So the hosts try to send a packet which is just less than the size of the MTU. 
But if the destination is not on a directly attached LAN, then the hosts cannot rely on the LAN's MTU in order to transmit the packet. 
So the host does something called the path discovery which discovers the maximum size of the packet in the path from the source to the
destination. 
i.e Path MTU is the samllest MTU encountered along all the connections along the route from one host to the another.

Checksums in IP header
	The IP protcol checksums cover only the IP header. Most L4 protocols checksums cover both their header and data. There is a checksum for the L2 layer, L3 layer and the L4 layer. The use of a checksum is recommended in every protocol definition, although it is not required. Nevertheless, one has to admit that a better design of related protocols could remove some of the overhead imposed by features that overlap in the protocols at different layers. Because most L2 and L4 protocols provide checksums, having it at L3 as well is not strictly necessary. For exactly this reason, the checksum hasbeen removed from IPv6.
	In IPv4, ip checksum is a 16 bit field that covers the entire IP header.  A checksum recalculation is triggered, if one of the following happens.
	1. Decrement the TTL.
	2. Packet changes by NAT
	3. IP options being changed - Ip options are a part of the header. IP calculates checksums only for the header. So recalculate csum
	4. Fragmentation - Fragmentation results in different header. Fields like offset, MF change. So recalculate csum.
Ip layer fragmentation is done by the function
	ip_fast_csum
	ip_compute_sum
	ip_send_check
	ip_decrease_ttl - Incremental updates to checksum, rather than recalculating the whole. Called within ip_forward
L4 layers use the following checksum functions.
	skb_checksum
	csum_fold
	csum_partial
	csum_block_add / csum_block_sub
	skb_checksum_help
		On being passed an ingress packet, it invalidates the L4 hardware checksum
		On an egress packet, it computes the L4 checksum. It is used when hardware checksumming cannot be used or the checksum
			has been invalidated. 
	csum_tcpudp_magic - Checksum for TCP/UDP pseudo headers.
Newer NICs can provide both IP and L4 checksum computations in hardware. Linux uses hardware L4 checksumming in most of the places but not
	the IP layer checksumming because it is not worth the complexity. i.e software computation is already fast enough since it is just
	zero'ng and finding complements. 
	
	






























