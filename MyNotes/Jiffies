The global variables "jiffies" holds the number of ticks that have occured since the system booted. 

On boot, the kernel initializes the variable to zero and it is incremented by one during each timer interrupt. There are 'hz' timer interrupts in a second, so there are 'hz' jiffies in a second. The system uptime is therefore jiffies/HZ seconds.

It is initialized in linux/jiffies.h
	extern unsigned long volatile jiffies;

Given seconds, we find jiffies as follows
	jiffies = seconds*Hz;

Given jiffies, we find the seconds as follows
	secons = jiffies / hz;

In a 32 bit machine, the jiffy value can easily overflow. If hz = 100, then the value can overflow in 497 days. If hz = 1000, then the jiffies can overflow in 49.7 days. 
In a 64 bit machine, for any reasonable value, the jiffy variable will not overflow in anyone else's lifetime.
It is defined as jiffies_64

Most code uses jiffies to simply measure elapses in time. 

To specify a timeout in 0.5 secons, we do the following.
	timeout = jiffies + hz/2
	if(timeout > jiffies)
		we did not timeout
	else
		we timed out


